class Game
  #To fix: When code has repeated numbers, hints should note 
  require_relative 'codemaker.rb'
  require_relative 'codebreaker.rb'

  def initialize
    puts "Welcome to this game of Mastermind!"
    puts "You are a codebreaker. Your mission: Deduce the 4 digit code generated by the machine."
    puts "Good luck! You have 12 tries to get the code right."
    puts "Type in your 4-digit guess for this round."
    @maker = Codemaker.new
    @breaker = Codebreaker.new(gets.chomp)
    @correct_place_counter = 0
    @correct_number_counter = 0
    @tries_left = 11
  end

  def play
    11.times do
      check_placement(@maker.code, @breaker.guess)
    end
    if @breaker.guess == @maker.code
      puts "Congrats, you solved it!"
    else
      puts "Sorry codebreaker, you're all out of tries."
      puts "The code was #{@maker.code}."
    end
  end

  def check_placement(code, guess)
    unique = code.split("").uniq
    guess.each_char.with_index do |digit, d_i|
      if digit == code[d_i]
        @correct_place_counter += 1
      end
    end

    unique.each_with_index do |digit, u_i|
      if guess.include?(unique[u_i])
        @correct_number_counter += 1
      end
    end

    if guess != code
      if (@correct_number_counter - @correct_place_counter) > 0
        puts "#{@correct_number_counter - @correct_place_counter} number(s) are in the code, but in the wrong spot."
      end
      if @correct_place_counter > 0
        puts "#{@correct_place_counter} number(s) are in the correct spot."
      end
      if @correct_number_counter == 0 && @correct_place_counter == 0
        puts "Sorry, none of the numbers in your guess are in the code."
      end
      puts "Try again!"
      @tries_left -= 1
      puts "You have #{@tries_left + 1} tries left."
      @breaker.guess = gets.chomp
      puts "The number you guessed is #{@breaker.guess}."
      @correct_place_counter = 0
      @correct_number_counter = 0
    end
  end
end

new_game = Game.new
new_game.play