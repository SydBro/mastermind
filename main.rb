class Game
  #To fix: When code has repeated numbers, hints should note 
  require_relative 'codemaker.rb'
  require_relative 'codebreaker.rb'
  require 'colorize'

  def initialize
    puts "Welcome to this game of Mastermind!"
    puts "You are a codebreaker. Your mission: Deduce the 4 digit code generated by the machine."
    puts "Good luck! You have 12 tries to get the code right."
    puts "Type in your 4-digit guess for this round."
    @maker = Codemaker.new
    @breaker = Codebreaker.new(gets.chomp)
    @correct_place_counter = 0
    @wrong_place_counter = 0
    @tries_left = 11
  end

  def play
    11.times do
      check_placement(@maker.code, @breaker.guess)
    end
    if @breaker.guess == @maker.code
      puts "Congrats, you solved it!"
    else
      puts "Sorry codebreaker, you're all out of tries."
      puts "The code was #{@maker.code}."
    end
  end

  def check_placement(code, guess)
    guess_arr = guess.split("")
    code_arr = code.split("")
    correct_guess = []
    wrong_guess = []
    guess.each_char.with_index do |digit, d_i|
      if guess_arr[d_i] == code_arr[d_i]
        @correct_place_counter += 1
        correct_guess.push(guess_arr[d_i].green)
        wrong_guess.push("_")
        guess_arr.delete_at(d_i)
        guess_arr.insert(d_i, "_")
        code_arr.delete_at(d_i)
        code_arr.insert(d_i, "_")
      else
        wrong_guess.push(guess_arr[d_i])
        correct_guess.push("_")
      end
    end

    guess_arr.each_with_index do |a, ai|
      unless correct_guess.include?(a)
        if code_arr.include?(a)
          @wrong_place_counter += 1
        end
      end
    end

    if guess != code
      puts "Your guess was #{@breaker.guess}."
      puts "The correct numbers in your guess are: " + correct_guess.join + "."
      if (@wrong_place_counter) > 0
        puts "You guessed #{@wrong_place_counter} number(s) correctly, but they're in a different spot."
      end
      #if @correct_place_counter > 0
        #puts "#{@correct_place_counter} number(s) are in the correct spot."
      #end
      if @wrong_place_counter == 0 && @correct_place_counter == 0
        puts "Sorry, none of the numbers in your guess are in the code."
      end
      puts "Try again!"
      @tries_left -= 1
      puts "You have #{@tries_left + 1} tries left."
      @breaker.guess = gets.chomp
      @correct_place_counter = 0
      @wrong_place_counter = 0
    end
  end
end

new_game = Game.new
new_game.play